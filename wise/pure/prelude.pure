export PURE_STACK=1024;

// For all x: i2p . p2i x = p2i . i2p x

// Hack to overcome the fact that we can't overload the internal
// `neg` function for integers
i2p x::double |
i2p x::int = Numeric x if x > 0;
           = Neg $ Numeric $ abs x if x < 0;

// Convert Infix to Prefix
i2p X = reduce X with
    x + y = add x y;
    x - y = add x (Neg y);
    x * y = mul x y;
    x / y = rational x y;
    x ^ y = powr x y;
    - x   = Neg x;
end;

// Convert Prefix to Infix
p2i X = reduce X with
    Numeric x     = x;
    Neg x         =  - x;
    add x y       =  x + y; 
    mul x y       =  x * y;
    rational x y  =  x / y;
    powr x y      =  x ^ y;
end;

// The prototype operator is used to initialize rules dynamially
infixl 1001 -->;
prototype x y = x --> y;

// Extract the lhs/rhs of a prototype
lhs (l --> r) = str l;
rhs (l --> r) = str r;

// Create an instance of our prototype rule
instance proto = eval $ (lhs proto) + " = " + (rhs proto);
